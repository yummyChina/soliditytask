{
	"id": "954d7fe6b1c95edee2df4c74a8725a8b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Tast2/Begging/Begging.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract BeggingContract is Ownable {\n\n    mapping(address => uint256 amount) private  donateAmount;\n\n    uint256 private totalAmount;\n\n    constructor() Ownable(msg.sender){\n\n    }\n\n    receive() external payable { }\n\n    function donate (address  user, uint256 amount) external payable  {\n        require(user != address(0),\"invalid user\"); // Check if the user is valid\n        payable(user).transfer(amount);\n        donateAmount[user]+=amount;\n    }\n\n    function withdraw(uint256 amount) public onlyOwner {\n        require (amount<=getBalance(), \"Insufficient balance\");  // Check if the sender has sufficient balance\n        payable (msg.sender).transfer(amount);\n    }\n\n    function getDonation(address user) public view returns(uint256) {\n        return donateAmount[user];\n    }\n\n    function getBalance() private view returns(uint256) {\n        return address(this).balance;\n    }\n\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Tast2/Begging/Begging.sol": {
				"BeggingContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getDonation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Tast2/Begging/Begging.sol\":110:1005  contract BeggingContract is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Tast2/Begging/Begging.sol\":250:291  constructor() Ownable(msg.sender){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"Tast2/Begging/Begging.sol\":272:282  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"Tast2/Begging/Begging.sol\":110:1005  contract BeggingContract is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Tast2/Begging/Begging.sol\":110:1005  contract BeggingContract is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tast2/Begging/Begging.sol\":110:1005  contract BeggingContract is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x410a1d32\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe69d849d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Tast2/Begging/Begging.sol\":570:786  function withdraw(uint256 amount) public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Tast2/Begging/Begging.sol\":792:898  function getDonation(address user) public view returns(uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      revert(0x00, 0x00)\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tast2/Begging/Begging.sol\":333:564  function donate (address  user, uint256 amount) external payable  {... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"Tast2/Begging/Begging.sol\":570:786  function withdraw(uint256 amount) public onlyOwner {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_40:\n        /* \"Tast2/Begging/Begging.sol\":648:660  getBalance() */\n      tag_43\n        /* \"Tast2/Begging/Begging.sol\":648:658  getBalance */\n      tag_44\n        /* \"Tast2/Begging/Begging.sol\":648:660  getBalance() */\n      jump\t// in\n    tag_43:\n        /* \"Tast2/Begging/Begging.sol\":640:646  amount */\n      dup2\n        /* \"Tast2/Begging/Begging.sol\":640:660  amount<=getBalance() */\n      gt\n      iszero\n        /* \"Tast2/Begging/Begging.sol\":631:685  require (amount<=getBalance(), \"Insufficient balance\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"Tast2/Begging/Begging.sol\":751:761  msg.sender */\n      caller\n        /* \"Tast2/Begging/Begging.sol\":742:771  payable (msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tast2/Begging/Begging.sol\":742:779  payable (msg.sender).transfer(amount) */\n      0x08fc\n        /* \"Tast2/Begging/Begging.sol\":772:778  amount */\n      dup3\n        /* \"Tast2/Begging/Begging.sol\":742:779  payable (msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n        /* \"Tast2/Begging/Begging.sol\":570:786  function withdraw(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Tast2/Begging/Begging.sol\":792:898  function getDonation(address user) public view returns(uint256) {... */\n    tag_20:\n        /* \"Tast2/Begging/Begging.sol\":847:854  uint256 */\n      0x00\n        /* \"Tast2/Begging/Begging.sol\":873:885  donateAmount */\n      0x01\n        /* \"Tast2/Begging/Begging.sol\":873:891  donateAmount[user] */\n      0x00\n        /* \"Tast2/Begging/Begging.sol\":886:890  user */\n      dup4\n        /* \"Tast2/Begging/Begging.sol\":873:891  donateAmount[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tast2/Begging/Begging.sol\":866:891  return donateAmount[user] */\n      swap1\n      pop\n        /* \"Tast2/Begging/Begging.sol\":792:898  function getDonation(address user) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Tast2/Begging/Begging.sol\":333:564  function donate (address  user, uint256 amount) external payable  {... */\n    tag_34:\n        /* \"Tast2/Begging/Begging.sol\":433:434  0 */\n      0x00\n        /* \"Tast2/Begging/Begging.sol\":417:435  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tast2/Begging/Begging.sol\":417:421  user */\n      dup3\n        /* \"Tast2/Begging/Begging.sol\":417:435  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tast2/Begging/Begging.sol\":409:451  require(user != address(0),\"invalid user\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"Tast2/Begging/Begging.sol\":499:503  user */\n      dup2\n        /* \"Tast2/Begging/Begging.sol\":491:513  payable(user).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tast2/Begging/Begging.sol\":491:521  payable(user).transfer(amount) */\n      0x08fc\n        /* \"Tast2/Begging/Begging.sol\":514:520  amount */\n      dup3\n        /* \"Tast2/Begging/Begging.sol\":491:521  payable(user).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n        /* \"Tast2/Begging/Begging.sol\":551:557  amount */\n      dup1\n        /* \"Tast2/Begging/Begging.sol\":531:543  donateAmount */\n      0x01\n        /* \"Tast2/Begging/Begging.sol\":531:549  donateAmount[user] */\n      0x00\n        /* \"Tast2/Begging/Begging.sol\":544:548  user */\n      dup5\n        /* \"Tast2/Begging/Begging.sol\":531:549  donateAmount[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tast2/Begging/Begging.sol\":531:557  donateAmount[user]+=amount */\n      dup3\n      dup3\n      sload\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tast2/Begging/Begging.sol\":333:564  function donate (address  user, uint256 amount) external payable  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_68\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_28\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_75\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"Tast2/Begging/Begging.sol\":904:1001  function getBalance() private view returns(uint256) {... */\n    tag_44:\n        /* \"Tast2/Begging/Begging.sol\":947:954  uint256 */\n      0x00\n        /* \"Tast2/Begging/Begging.sol\":973:994  address(this).balance */\n      selfbalance\n        /* \"Tast2/Begging/Begging.sol\":966:994  return address(this).balance */\n      swap1\n      pop\n        /* \"Tast2/Begging/Begging.sol\":904:1001  function getBalance() private view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_82:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_84:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_85:\n        /* \"#utility.yul\":490:514   */\n      tag_105\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_84\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_106:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_86:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_108\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_85\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_14:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_111\n      tag_82\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":766:885   */\n    tag_110:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_112\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_86\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_87:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_88:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_115\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_87\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_89:\n        /* \"#utility.yul\":1332:1356   */\n      tag_117\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_88\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_118\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      0x00\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_118:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_90:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_120\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_89\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1861   */\n    tag_19:\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1628:1637   */\n      dup3\n        /* \"#utility.yul\":1619:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1638   */\n      sub\n        /* \"#utility.yul\":1611:1643   */\n      slt\n        /* \"#utility.yul\":1608:1727   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":1646:1725   */\n      tag_123\n      tag_82\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1608:1727   */\n    tag_122:\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1791:1844   */\n      tag_124\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_90\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1781:1844   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:1854   */\n      pop\n        /* \"#utility.yul\":1532:1861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:1985   */\n    tag_91:\n        /* \"#utility.yul\":1954:1978   */\n      tag_126\n        /* \"#utility.yul\":1972:1977   */\n      dup2\n        /* \"#utility.yul\":1954:1978   */\n      tag_84\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1949:1952   */\n      dup3\n        /* \"#utility.yul\":1942:1979   */\n      mstore\n        /* \"#utility.yul\":1867:1985   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1991:2213   */\n    tag_22:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x20\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_128\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup5\n        /* \"#utility.yul\":2135:2206   */\n      tag_91\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1991:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2337   */\n    tag_92:\n        /* \"#utility.yul\":2306:2330   */\n      tag_130\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_88\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2219:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2565   */\n    tag_30:\n        /* \"#utility.yul\":2436:2440   */\n      0x00\n        /* \"#utility.yul\":2474:2476   */\n      0x20\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2477   */\n      add\n        /* \"#utility.yul\":2451:2477   */\n      swap1\n      pop\n        /* \"#utility.yul\":2487:2558   */\n      tag_132\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2544:2553   */\n      dup4\n        /* \"#utility.yul\":2540:2557   */\n      add\n        /* \"#utility.yul\":2531:2537   */\n      dup5\n        /* \"#utility.yul\":2487:2558   */\n      tag_92\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2343:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:3045   */\n    tag_33:\n        /* \"#utility.yul\":2639:2645   */\n      0x00\n        /* \"#utility.yul\":2647:2653   */\n      0x00\n        /* \"#utility.yul\":2696:2698   */\n      0x40\n        /* \"#utility.yul\":2684:2693   */\n      dup4\n        /* \"#utility.yul\":2675:2682   */\n      dup6\n        /* \"#utility.yul\":2671:2694   */\n      sub\n        /* \"#utility.yul\":2667:2699   */\n      slt\n        /* \"#utility.yul\":2664:2783   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":2702:2781   */\n      tag_135\n      tag_82\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2664:2783   */\n    tag_134:\n        /* \"#utility.yul\":2822:2823   */\n      0x00\n        /* \"#utility.yul\":2847:2900   */\n      tag_136\n        /* \"#utility.yul\":2892:2899   */\n      dup6\n        /* \"#utility.yul\":2883:2889   */\n      dup3\n        /* \"#utility.yul\":2872:2881   */\n      dup7\n        /* \"#utility.yul\":2868:2890   */\n      add\n        /* \"#utility.yul\":2847:2900   */\n      tag_90\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2837:2900   */\n      swap3\n      pop\n        /* \"#utility.yul\":2793:2910   */\n      pop\n        /* \"#utility.yul\":2949:2951   */\n      0x20\n        /* \"#utility.yul\":2975:3028   */\n      tag_137\n        /* \"#utility.yul\":3020:3027   */\n      dup6\n        /* \"#utility.yul\":3011:3017   */\n      dup3\n        /* \"#utility.yul\":3000:3009   */\n      dup7\n        /* \"#utility.yul\":2996:3018   */\n      add\n        /* \"#utility.yul\":2975:3028   */\n      tag_86\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2965:3028   */\n      swap2\n      pop\n        /* \"#utility.yul\":2920:3038   */\n      pop\n        /* \"#utility.yul\":2571:3045   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3220   */\n    tag_93:\n        /* \"#utility.yul\":3135:3146   */\n      0x00\n        /* \"#utility.yul\":3169:3175   */\n      dup3\n        /* \"#utility.yul\":3164:3167   */\n      dup3\n        /* \"#utility.yul\":3157:3176   */\n      mstore\n        /* \"#utility.yul\":3209:3213   */\n      0x20\n        /* \"#utility.yul\":3204:3207   */\n      dup3\n        /* \"#utility.yul\":3200:3214   */\n      add\n        /* \"#utility.yul\":3185:3214   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3226:3396   */\n    tag_94:\n        /* \"#utility.yul\":3366:3388   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":3362:3363   */\n      0x00\n        /* \"#utility.yul\":3354:3360   */\n      dup3\n        /* \"#utility.yul\":3350:3364   */\n      add\n        /* \"#utility.yul\":3343:3389   */\n      mstore\n        /* \"#utility.yul\":3226:3396   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3402:3768   */\n    tag_95:\n        /* \"#utility.yul\":3544:3547   */\n      0x00\n        /* \"#utility.yul\":3565:3632   */\n      tag_141\n        /* \"#utility.yul\":3629:3631   */\n      0x14\n        /* \"#utility.yul\":3624:3627   */\n      dup4\n        /* \"#utility.yul\":3565:3632   */\n      tag_93\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3558:3632   */\n      swap2\n      pop\n        /* \"#utility.yul\":3641:3734   */\n      tag_142\n        /* \"#utility.yul\":3730:3733   */\n      dup3\n        /* \"#utility.yul\":3641:3734   */\n      tag_94\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3759:3761   */\n      0x20\n        /* \"#utility.yul\":3754:3757   */\n      dup3\n        /* \"#utility.yul\":3750:3762   */\n      add\n        /* \"#utility.yul\":3743:3762   */\n      swap1\n      pop\n        /* \"#utility.yul\":3402:3768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3774:4193   */\n    tag_47:\n        /* \"#utility.yul\":3940:3944   */\n      0x00\n        /* \"#utility.yul\":3978:3980   */\n      0x20\n        /* \"#utility.yul\":3967:3976   */\n      dup3\n        /* \"#utility.yul\":3963:3981   */\n      add\n        /* \"#utility.yul\":3955:3981   */\n      swap1\n      pop\n        /* \"#utility.yul\":4027:4036   */\n      dup2\n        /* \"#utility.yul\":4021:4025   */\n      dup2\n        /* \"#utility.yul\":4017:4037   */\n      sub\n        /* \"#utility.yul\":4013:4014   */\n      0x00\n        /* \"#utility.yul\":4002:4011   */\n      dup4\n        /* \"#utility.yul\":3998:4015   */\n      add\n        /* \"#utility.yul\":3991:4038   */\n      mstore\n        /* \"#utility.yul\":4055:4186   */\n      tag_144\n        /* \"#utility.yul\":4181:4185   */\n      dup2\n        /* \"#utility.yul\":4055:4186   */\n      tag_95\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4047:4186   */\n      swap1\n      pop\n        /* \"#utility.yul\":3774:4193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4199:4361   */\n    tag_96:\n        /* \"#utility.yul\":4339:4353   */\n      0x696e76616c696420757365720000000000000000000000000000000000000000\n        /* \"#utility.yul\":4335:4336   */\n      0x00\n        /* \"#utility.yul\":4327:4333   */\n      dup3\n        /* \"#utility.yul\":4323:4337   */\n      add\n        /* \"#utility.yul\":4316:4354   */\n      mstore\n        /* \"#utility.yul\":4199:4361   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4367:4733   */\n    tag_97:\n        /* \"#utility.yul\":4509:4512   */\n      0x00\n        /* \"#utility.yul\":4530:4597   */\n      tag_147\n        /* \"#utility.yul\":4594:4596   */\n      0x0c\n        /* \"#utility.yul\":4589:4592   */\n      dup4\n        /* \"#utility.yul\":4530:4597   */\n      tag_93\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4523:4597   */\n      swap2\n      pop\n        /* \"#utility.yul\":4606:4699   */\n      tag_148\n        /* \"#utility.yul\":4695:4698   */\n      dup3\n        /* \"#utility.yul\":4606:4699   */\n      tag_96\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4724:4726   */\n      0x20\n        /* \"#utility.yul\":4719:4722   */\n      dup3\n        /* \"#utility.yul\":4715:4727   */\n      add\n        /* \"#utility.yul\":4708:4727   */\n      swap1\n      pop\n        /* \"#utility.yul\":4367:4733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4739:5158   */\n    tag_60:\n        /* \"#utility.yul\":4905:4909   */\n      0x00\n        /* \"#utility.yul\":4943:4945   */\n      0x20\n        /* \"#utility.yul\":4932:4941   */\n      dup3\n        /* \"#utility.yul\":4928:4946   */\n      add\n        /* \"#utility.yul\":4920:4946   */\n      swap1\n      pop\n        /* \"#utility.yul\":4992:5001   */\n      dup2\n        /* \"#utility.yul\":4986:4990   */\n      dup2\n        /* \"#utility.yul\":4982:5002   */\n      sub\n        /* \"#utility.yul\":4978:4979   */\n      0x00\n        /* \"#utility.yul\":4967:4976   */\n      dup4\n        /* \"#utility.yul\":4963:4980   */\n      add\n        /* \"#utility.yul\":4956:5003   */\n      mstore\n        /* \"#utility.yul\":5020:5151   */\n      tag_150\n        /* \"#utility.yul\":5146:5150   */\n      dup2\n        /* \"#utility.yul\":5020:5151   */\n      tag_97\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5012:5151   */\n      swap1\n      pop\n        /* \"#utility.yul\":4739:5158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5164:5344   */\n    tag_98:\n        /* \"#utility.yul\":5212:5289   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5209:5210   */\n      0x00\n        /* \"#utility.yul\":5202:5290   */\n      mstore\n        /* \"#utility.yul\":5309:5313   */\n      0x11\n        /* \"#utility.yul\":5306:5307   */\n      0x04\n        /* \"#utility.yul\":5299:5314   */\n      mstore\n        /* \"#utility.yul\":5333:5337   */\n      0x24\n        /* \"#utility.yul\":5330:5331   */\n      0x00\n        /* \"#utility.yul\":5323:5338   */\n      revert\n        /* \"#utility.yul\":5350:5541   */\n    tag_64:\n        /* \"#utility.yul\":5390:5393   */\n      0x00\n        /* \"#utility.yul\":5409:5429   */\n      tag_153\n        /* \"#utility.yul\":5427:5428   */\n      dup3\n        /* \"#utility.yul\":5409:5429   */\n      tag_84\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5404:5429   */\n      swap2\n      pop\n        /* \"#utility.yul\":5443:5463   */\n      tag_154\n        /* \"#utility.yul\":5461:5462   */\n      dup4\n        /* \"#utility.yul\":5443:5463   */\n      tag_84\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5438:5463   */\n      swap3\n      pop\n        /* \"#utility.yul\":5486:5487   */\n      dup3\n        /* \"#utility.yul\":5483:5484   */\n      dup3\n        /* \"#utility.yul\":5479:5488   */\n      add\n        /* \"#utility.yul\":5472:5488   */\n      swap1\n      pop\n        /* \"#utility.yul\":5507:5510   */\n      dup1\n        /* \"#utility.yul\":5504:5505   */\n      dup3\n        /* \"#utility.yul\":5501:5511   */\n      gt\n        /* \"#utility.yul\":5498:5534   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":5514:5532   */\n      tag_156\n      tag_98\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5498:5534   */\n    tag_155:\n        /* \"#utility.yul\":5350:5541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220690540d9bfe0819ee7b9e058fbdba792d48eedbd3a29633b4549ff17838e55b064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_196": {
									"entryPoint": null,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:3",
										"nodeType": "YulBlock",
										"src": "0:590:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b610832806101bc5f395ff3fe608060405260043610610058575f3560e01c80632e1a7d4d14610063578063410a1d321461008b578063715018a6146100c75780638da5cb5b146100dd578063e69d849d14610107578063f2fde38b146101235761005f565b3661005f57005b5f5ffd5b34801561006e575f5ffd5b506100896004803603810190610084919061057e565b61014b565b005b348015610096575f5ffd5b506100b160048036038101906100ac9190610603565b6101e4565b6040516100be919061063d565b60405180910390f35b3480156100d2575f5ffd5b506100db61022a565b005b3480156100e8575f5ffd5b506100f161023d565b6040516100fe9190610665565b60405180910390f35b610121600480360381019061011c919061067e565b610264565b005b34801561012e575f5ffd5b5061014960048036038101906101449190610603565b61036d565b005b6101536103f1565b61015b610478565b81111561019d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019490610716565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156101e0573d5f5f3e3d5ffd5b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6102326103f1565b61023b5f61047f565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c99061077e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610315573d5f5f3e3d5ffd5b508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461036291906107c9565b925050819055505050565b6103756103f1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103e5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103dc9190610665565b60405180910390fd5b6103ee8161047f565b50565b6103f9610540565b73ffffffffffffffffffffffffffffffffffffffff1661041761023d565b73ffffffffffffffffffffffffffffffffffffffff16146104765761043a610540565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161046d9190610665565b60405180910390fd5b565b5f47905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f819050919050565b61055d8161054b565b8114610567575f5ffd5b50565b5f8135905061057881610554565b92915050565b5f6020828403121561059357610592610547565b5b5f6105a08482850161056a565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105d2826105a9565b9050919050565b6105e2816105c8565b81146105ec575f5ffd5b50565b5f813590506105fd816105d9565b92915050565b5f6020828403121561061857610617610547565b5b5f610625848285016105ef565b91505092915050565b6106378161054b565b82525050565b5f6020820190506106505f83018461062e565b92915050565b61065f816105c8565b82525050565b5f6020820190506106785f830184610656565b92915050565b5f5f6040838503121561069457610693610547565b5b5f6106a1858286016105ef565b92505060206106b28582860161056a565b9150509250929050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6107006014836106bc565b915061070b826106cc565b602082019050919050565b5f6020820190508181035f83015261072d816106f4565b9050919050565b7f696e76616c6964207573657200000000000000000000000000000000000000005f82015250565b5f610768600c836106bc565b915061077382610734565b602082019050919050565b5f6020820190508181035f8301526107958161075c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107d38261054b565b91506107de8361054b565b92508282019050808211156107f6576107f561079c565b5b9291505056fea2646970667358221220690540d9bfe0819ee7b9e058fbdba792d48eedbd3a29633b4549ff17838e55b064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x832 DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x123 JUMPI PUSH2 0x5F JUMP JUMPDEST CALLDATASIZE PUSH2 0x5F JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x14B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x22A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xF1 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x478 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x19D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1E0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x232 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x23B PUSH0 PUSH2 0x47F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x315 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x7C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x375 PUSH2 0x3F1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3EE DUP2 PUSH2 0x47F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x540 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x417 PUSH2 0x23D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x476 JUMPI PUSH2 0x43A PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55D DUP2 PUSH2 0x54B JUMP JUMPDEST DUP2 EQ PUSH2 0x567 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x578 DUP2 PUSH2 0x554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x593 JUMPI PUSH2 0x592 PUSH2 0x547 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5A0 DUP5 DUP3 DUP6 ADD PUSH2 0x56A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5D2 DUP3 PUSH2 0x5A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E2 DUP2 PUSH2 0x5C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x5EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5FD DUP2 PUSH2 0x5D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x618 JUMPI PUSH2 0x617 PUSH2 0x547 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x625 DUP5 DUP3 DUP6 ADD PUSH2 0x5EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x637 DUP2 PUSH2 0x54B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x650 PUSH0 DUP4 ADD DUP5 PUSH2 0x62E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x65F DUP2 PUSH2 0x5C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x678 PUSH0 DUP4 ADD DUP5 PUSH2 0x656 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x694 JUMPI PUSH2 0x693 PUSH2 0x547 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6A1 DUP6 DUP3 DUP7 ADD PUSH2 0x5EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6B2 DUP6 DUP3 DUP7 ADD PUSH2 0x56A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x700 PUSH1 0x14 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH2 0x70B DUP3 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x72D DUP2 PUSH2 0x6F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420757365720000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x768 PUSH1 0xC DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH2 0x773 DUP3 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x795 DUP2 PUSH2 0x75C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7D3 DUP3 PUSH2 0x54B JUMP JUMPDEST SWAP2 POP PUSH2 0x7DE DUP4 PUSH2 0x54B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7F6 JUMPI PUSH2 0x7F5 PUSH2 0x79C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x540D9BFE0819EE7B9E0 PC EXTSTATICCALL 0xDB 0xA7 SWAP3 0xD4 DUP15 0xED 0xBD GASPRICE 0x29 PUSH4 0x3B4549FF OR DUP4 DUP15 SSTORE 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "110:895:2:-:0;;;250:41;;;;;;;;;;272:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;110:895:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;110:895:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1009,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1344,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1151,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@donate_232": {
									"entryPoint": 612,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getBalance_281": {
									"entryPoint": 1144,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDonation_269": {
									"entryPoint": 484,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 573,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 554,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 877,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_257": {
									"entryPoint": 331,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5544:3",
										"nodeType": "YulBlock",
										"src": "0:5544:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:32:3",
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nativeSrc": "389:16:3",
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:3",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nativeSrc": "460:79:3",
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:3",
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:3",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:3",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nativeSrc": "519:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nativeSrc": "519:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nativeSrc": "490:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nativeSrc": "480:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nativeSrc": "473:43:3",
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nativeSrc": "470:63:3",
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:3",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nativeSrc": "597:87:3",
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nativeSrc": "607:29:3",
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nativeSrc": "616:20:3",
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nativeSrc": "645:33:3",
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nativeSrc": "645:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:3",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:3",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:3",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nativeSrc": "756:263:3",
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:3",
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nativeSrc": "804:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nativeSrc": "804:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nativeSrc": "773:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:3",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nativeSrc": "769:32:3",
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nativeSrc": "766:119:3",
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nativeSrc": "895:117:3",
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nativeSrc": "910:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:3",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:3",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:3",
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nativeSrc": "970:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nativeSrc": "949:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:3",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:3",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:3",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nativeSrc": "1070:81:3",
													"nodeType": "YulBlock",
													"src": "1070:81:3",
													"statements": [
														{
															"nativeSrc": "1080:65:3",
															"nodeType": "YulAssignment",
															"src": "1080:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:3",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:3"
																},
																"nativeSrc": "1091:54:3",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:3",
														"nodeType": "YulTypedName",
														"src": "1052:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:3",
														"nodeType": "YulTypedName",
														"src": "1062:7:3",
														"type": ""
													}
												],
												"src": "1025:126:3"
											},
											{
												"body": {
													"nativeSrc": "1202:51:3",
													"nodeType": "YulBlock",
													"src": "1202:51:3",
													"statements": [
														{
															"nativeSrc": "1212:35:3",
															"nodeType": "YulAssignment",
															"src": "1212:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:3"
																},
																"nativeSrc": "1223:24:3",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:3",
														"nodeType": "YulTypedName",
														"src": "1184:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:3",
														"nodeType": "YulTypedName",
														"src": "1194:7:3",
														"type": ""
													}
												],
												"src": "1157:96:3"
											},
											{
												"body": {
													"nativeSrc": "1302:79:3",
													"nodeType": "YulBlock",
													"src": "1302:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1359:16:3",
																"nodeType": "YulBlock",
																"src": "1359:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1368:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1371:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1361:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:3"
																			},
																			"nativeSrc": "1361:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:3"
																		},
																		"nativeSrc": "1361:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1325:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1350:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1332:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:3"
																				},
																				"nativeSrc": "1332:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1322:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:3"
																		},
																		"nativeSrc": "1322:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1315:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:3"
																},
																"nativeSrc": "1315:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1315:43:3"
															},
															"nativeSrc": "1312:63:3",
															"nodeType": "YulIf",
															"src": "1312:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1259:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1295:5:3",
														"nodeType": "YulTypedName",
														"src": "1295:5:3",
														"type": ""
													}
												],
												"src": "1259:122:3"
											},
											{
												"body": {
													"nativeSrc": "1439:87:3",
													"nodeType": "YulBlock",
													"src": "1439:87:3",
													"statements": [
														{
															"nativeSrc": "1449:29:3",
															"nodeType": "YulAssignment",
															"src": "1449:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1471:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1458:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:3"
																},
																"nativeSrc": "1458:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1458:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1449:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1514:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1487:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:3"
																},
																"nativeSrc": "1487:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1487:33:3"
															},
															"nativeSrc": "1487:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1387:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1417:6:3",
														"nodeType": "YulTypedName",
														"src": "1417:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1425:3:3",
														"nodeType": "YulTypedName",
														"src": "1425:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1433:5:3",
														"nodeType": "YulTypedName",
														"src": "1433:5:3",
														"type": ""
													}
												],
												"src": "1387:139:3"
											},
											{
												"body": {
													"nativeSrc": "1598:263:3",
													"nodeType": "YulBlock",
													"src": "1598:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1644:83:3",
																"nodeType": "YulBlock",
																"src": "1644:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1646:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1646:77:3"
																			},
																			"nativeSrc": "1646:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1646:79:3"
																		},
																		"nativeSrc": "1646:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1619:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1619:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1628:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1615:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:3"
																		},
																		"nativeSrc": "1615:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1615:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1640:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1611:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1611:3:3"
																},
																"nativeSrc": "1611:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1611:32:3"
															},
															"nativeSrc": "1608:119:3",
															"nodeType": "YulIf",
															"src": "1608:119:3"
														},
														{
															"nativeSrc": "1737:117:3",
															"nodeType": "YulBlock",
															"src": "1737:117:3",
															"statements": [
																{
																	"nativeSrc": "1752:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1752:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1766:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1756:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1756:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1781:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1781:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1816:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1827:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1812:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:3"
																				},
																				"nativeSrc": "1812:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1836:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1791:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:3"
																		},
																		"nativeSrc": "1791:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1781:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1532:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1568:9:3",
														"nodeType": "YulTypedName",
														"src": "1568:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1579:7:3",
														"nodeType": "YulTypedName",
														"src": "1579:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1591:6:3",
														"nodeType": "YulTypedName",
														"src": "1591:6:3",
														"type": ""
													}
												],
												"src": "1532:329:3"
											},
											{
												"body": {
													"nativeSrc": "1932:53:3",
													"nodeType": "YulBlock",
													"src": "1932:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1949:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1972:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1972:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1954:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1954:17:3"
																		},
																		"nativeSrc": "1954:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1954:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1942:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:3"
																},
																"nativeSrc": "1942:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1942:37:3"
															},
															"nativeSrc": "1942:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1942:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1867:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1920:5:3",
														"nodeType": "YulTypedName",
														"src": "1920:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1927:3:3",
														"nodeType": "YulTypedName",
														"src": "1927:3:3",
														"type": ""
													}
												],
												"src": "1867:118:3"
											},
											{
												"body": {
													"nativeSrc": "2089:124:3",
													"nodeType": "YulBlock",
													"src": "2089:124:3",
													"statements": [
														{
															"nativeSrc": "2099:26:3",
															"nodeType": "YulAssignment",
															"src": "2099:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2111:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2122:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2107:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:3"
																},
																"nativeSrc": "2107:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2107:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2099:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2179:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2192:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2203:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2188:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:3"
																		},
																		"nativeSrc": "2188:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2135:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:3"
																},
																"nativeSrc": "2135:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2135:71:3"
															},
															"nativeSrc": "2135:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1991:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:3",
														"nodeType": "YulTypedName",
														"src": "2061:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2073:6:3",
														"nodeType": "YulTypedName",
														"src": "2073:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2084:4:3",
														"nodeType": "YulTypedName",
														"src": "2084:4:3",
														"type": ""
													}
												],
												"src": "1991:222:3"
											},
											{
												"body": {
													"nativeSrc": "2284:53:3",
													"nodeType": "YulBlock",
													"src": "2284:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2301:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2324:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2306:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:3"
																		},
																		"nativeSrc": "2306:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2294:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:3"
																},
																"nativeSrc": "2294:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2294:37:3"
															},
															"nativeSrc": "2294:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2219:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2272:5:3",
														"nodeType": "YulTypedName",
														"src": "2272:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2279:3:3",
														"nodeType": "YulTypedName",
														"src": "2279:3:3",
														"type": ""
													}
												],
												"src": "2219:118:3"
											},
											{
												"body": {
													"nativeSrc": "2441:124:3",
													"nodeType": "YulBlock",
													"src": "2441:124:3",
													"statements": [
														{
															"nativeSrc": "2451:26:3",
															"nodeType": "YulAssignment",
															"src": "2451:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2463:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2474:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2474:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2459:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:3"
																},
																"nativeSrc": "2459:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2459:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2451:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2451:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2531:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2544:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2555:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2555:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2540:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:3"
																		},
																		"nativeSrc": "2540:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2540:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2487:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2487:43:3"
																},
																"nativeSrc": "2487:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2487:71:3"
															},
															"nativeSrc": "2487:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2487:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2343:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2413:9:3",
														"nodeType": "YulTypedName",
														"src": "2413:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2425:6:3",
														"nodeType": "YulTypedName",
														"src": "2425:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2436:4:3",
														"nodeType": "YulTypedName",
														"src": "2436:4:3",
														"type": ""
													}
												],
												"src": "2343:222:3"
											},
											{
												"body": {
													"nativeSrc": "2654:391:3",
													"nodeType": "YulBlock",
													"src": "2654:391:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2700:83:3",
																"nodeType": "YulBlock",
																"src": "2700:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2702:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2702:77:3"
																			},
																			"nativeSrc": "2702:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2702:79:3"
																		},
																		"nativeSrc": "2702:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2702:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2675:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2675:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2684:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2684:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2671:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:3"
																		},
																		"nativeSrc": "2671:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2671:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2696:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2696:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2667:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:3"
																},
																"nativeSrc": "2667:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2667:32:3"
															},
															"nativeSrc": "2664:119:3",
															"nodeType": "YulIf",
															"src": "2664:119:3"
														},
														{
															"nativeSrc": "2793:117:3",
															"nodeType": "YulBlock",
															"src": "2793:117:3",
															"statements": [
																{
																	"nativeSrc": "2808:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2808:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2822:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2822:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2812:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2812:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2837:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2837:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2872:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2872:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2883:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2883:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2868:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2868:3:3"
																				},
																				"nativeSrc": "2868:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2892:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2892:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2847:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2847:20:3"
																		},
																		"nativeSrc": "2847:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2847:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2837:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2837:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2920:118:3",
															"nodeType": "YulBlock",
															"src": "2920:118:3",
															"statements": [
																{
																	"nativeSrc": "2935:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2935:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2949:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2949:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2939:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2939:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2965:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2965:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3000:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3000:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3011:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3011:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2996:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:3"
																				},
																				"nativeSrc": "2996:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2996:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3020:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3020:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2975:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2975:20:3"
																		},
																		"nativeSrc": "2975:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2965:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2571:474:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2616:9:3",
														"nodeType": "YulTypedName",
														"src": "2616:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2627:7:3",
														"nodeType": "YulTypedName",
														"src": "2627:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2639:6:3",
														"nodeType": "YulTypedName",
														"src": "2639:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2647:6:3",
														"nodeType": "YulTypedName",
														"src": "2647:6:3",
														"type": ""
													}
												],
												"src": "2571:474:3"
											},
											{
												"body": {
													"nativeSrc": "3147:73:3",
													"nodeType": "YulBlock",
													"src": "3147:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3164:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3164:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3169:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3169:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3157:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3157:6:3"
																},
																"nativeSrc": "3157:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3157:19:3"
															},
															"nativeSrc": "3157:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "3157:19:3"
														},
														{
															"nativeSrc": "3185:29:3",
															"nodeType": "YulAssignment",
															"src": "3185:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3204:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3204:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3209:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3209:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3200:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:3"
																},
																"nativeSrc": "3200:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3200:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3185:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "3185:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3051:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3119:3:3",
														"nodeType": "YulTypedName",
														"src": "3119:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3124:6:3",
														"nodeType": "YulTypedName",
														"src": "3124:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3135:11:3",
														"nodeType": "YulTypedName",
														"src": "3135:11:3",
														"type": ""
													}
												],
												"src": "3051:169:3"
											},
											{
												"body": {
													"nativeSrc": "3332:64:3",
													"nodeType": "YulBlock",
													"src": "3332:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3354:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3354:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3362:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3362:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3350:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:3"
																		},
																		"nativeSrc": "3350:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3350:14:3"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "3366:22:3",
																		"nodeType": "YulLiteral",
																		"src": "3366:22:3",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3343:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3343:6:3"
																},
																"nativeSrc": "3343:46:3",
																"nodeType": "YulFunctionCall",
																"src": "3343:46:3"
															},
															"nativeSrc": "3343:46:3",
															"nodeType": "YulExpressionStatement",
															"src": "3343:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "3226:170:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3324:6:3",
														"nodeType": "YulTypedName",
														"src": "3324:6:3",
														"type": ""
													}
												],
												"src": "3226:170:3"
											},
											{
												"body": {
													"nativeSrc": "3548:220:3",
													"nodeType": "YulBlock",
													"src": "3548:220:3",
													"statements": [
														{
															"nativeSrc": "3558:74:3",
															"nodeType": "YulAssignment",
															"src": "3558:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3624:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3624:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3629:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3629:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3565:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3565:58:3"
																},
																"nativeSrc": "3565:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3565:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3558:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3558:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3730:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3730:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "3641:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3641:88:3"
																},
																"nativeSrc": "3641:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3641:93:3"
															},
															"nativeSrc": "3641:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3641:93:3"
														},
														{
															"nativeSrc": "3743:19:3",
															"nodeType": "YulAssignment",
															"src": "3743:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3754:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3754:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3759:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3759:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3750:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3750:3:3"
																},
																"nativeSrc": "3750:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3750:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3743:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3743:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3402:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3536:3:3",
														"nodeType": "YulTypedName",
														"src": "3536:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3544:3:3",
														"nodeType": "YulTypedName",
														"src": "3544:3:3",
														"type": ""
													}
												],
												"src": "3402:366:3"
											},
											{
												"body": {
													"nativeSrc": "3945:248:3",
													"nodeType": "YulBlock",
													"src": "3945:248:3",
													"statements": [
														{
															"nativeSrc": "3955:26:3",
															"nodeType": "YulAssignment",
															"src": "3955:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3967:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3967:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3978:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3978:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3963:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3963:3:3"
																},
																"nativeSrc": "3963:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3963:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3955:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3955:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4002:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4002:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4013:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4013:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3998:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:3"
																		},
																		"nativeSrc": "3998:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4021:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4021:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4027:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4027:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4017:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4017:3:3"
																		},
																		"nativeSrc": "4017:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4017:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3991:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3991:6:3"
																},
																"nativeSrc": "3991:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3991:47:3"
															},
															"nativeSrc": "3991:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3991:47:3"
														},
														{
															"nativeSrc": "4047:139:3",
															"nodeType": "YulAssignment",
															"src": "4047:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4181:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4181:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4055:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4055:124:3"
																},
																"nativeSrc": "4055:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4055:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4047:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4047:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3774:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3925:9:3",
														"nodeType": "YulTypedName",
														"src": "3925:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3940:4:3",
														"nodeType": "YulTypedName",
														"src": "3940:4:3",
														"type": ""
													}
												],
												"src": "3774:419:3"
											},
											{
												"body": {
													"nativeSrc": "4305:56:3",
													"nodeType": "YulBlock",
													"src": "4305:56:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4327:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4327:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4335:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4335:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4323:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:3"
																		},
																		"nativeSrc": "4323:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4323:14:3"
																	},
																	{
																		"hexValue": "696e76616c69642075736572",
																		"kind": "string",
																		"nativeSrc": "4339:14:3",
																		"nodeType": "YulLiteral",
																		"src": "4339:14:3",
																		"type": "",
																		"value": "invalid user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:3"
																},
																"nativeSrc": "4316:38:3",
																"nodeType": "YulFunctionCall",
																"src": "4316:38:3"
															},
															"nativeSrc": "4316:38:3",
															"nodeType": "YulExpressionStatement",
															"src": "4316:38:3"
														}
													]
												},
												"name": "store_literal_in_memory_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6",
												"nativeSrc": "4199:162:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4297:6:3",
														"nodeType": "YulTypedName",
														"src": "4297:6:3",
														"type": ""
													}
												],
												"src": "4199:162:3"
											},
											{
												"body": {
													"nativeSrc": "4513:220:3",
													"nodeType": "YulBlock",
													"src": "4513:220:3",
													"statements": [
														{
															"nativeSrc": "4523:74:3",
															"nodeType": "YulAssignment",
															"src": "4523:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4589:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4589:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4594:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4594:2:3",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4530:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "4530:58:3"
																},
																"nativeSrc": "4530:67:3",
																"nodeType": "YulFunctionCall",
																"src": "4530:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4523:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4523:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4695:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4695:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6",
																	"nativeSrc": "4606:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "4606:88:3"
																},
																"nativeSrc": "4606:93:3",
																"nodeType": "YulFunctionCall",
																"src": "4606:93:3"
															},
															"nativeSrc": "4606:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "4606:93:3"
														},
														{
															"nativeSrc": "4708:19:3",
															"nodeType": "YulAssignment",
															"src": "4708:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4719:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4719:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4724:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4724:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4715:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:3"
																},
																"nativeSrc": "4715:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4715:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4708:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4708:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4367:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4501:3:3",
														"nodeType": "YulTypedName",
														"src": "4501:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4509:3:3",
														"nodeType": "YulTypedName",
														"src": "4509:3:3",
														"type": ""
													}
												],
												"src": "4367:366:3"
											},
											{
												"body": {
													"nativeSrc": "4910:248:3",
													"nodeType": "YulBlock",
													"src": "4910:248:3",
													"statements": [
														{
															"nativeSrc": "4920:26:3",
															"nodeType": "YulAssignment",
															"src": "4920:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4932:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4932:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4943:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4943:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4928:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4928:3:3"
																},
																"nativeSrc": "4928:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4928:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4920:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4920:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4967:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4967:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4978:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4978:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4963:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4963:3:3"
																		},
																		"nativeSrc": "4963:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4963:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4986:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4986:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4992:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4992:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4982:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4982:3:3"
																		},
																		"nativeSrc": "4982:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4982:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4956:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4956:6:3"
																},
																"nativeSrc": "4956:47:3",
																"nodeType": "YulFunctionCall",
																"src": "4956:47:3"
															},
															"nativeSrc": "4956:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "4956:47:3"
														},
														{
															"nativeSrc": "5012:139:3",
															"nodeType": "YulAssignment",
															"src": "5012:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5146:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "5146:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5020:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "5020:124:3"
																},
																"nativeSrc": "5020:131:3",
																"nodeType": "YulFunctionCall",
																"src": "5020:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5012:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5012:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4739:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4890:9:3",
														"nodeType": "YulTypedName",
														"src": "4890:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4905:4:3",
														"nodeType": "YulTypedName",
														"src": "4905:4:3",
														"type": ""
													}
												],
												"src": "4739:419:3"
											},
											{
												"body": {
													"nativeSrc": "5192:152:3",
													"nodeType": "YulBlock",
													"src": "5192:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5209:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5209:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5212:77:3",
																		"nodeType": "YulLiteral",
																		"src": "5212:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5202:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5202:6:3"
																},
																"nativeSrc": "5202:88:3",
																"nodeType": "YulFunctionCall",
																"src": "5202:88:3"
															},
															"nativeSrc": "5202:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "5202:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5306:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5306:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5309:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5309:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5299:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5299:6:3"
																},
																"nativeSrc": "5299:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5299:15:3"
															},
															"nativeSrc": "5299:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5299:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5330:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5330:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5333:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5333:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5323:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5323:6:3"
																},
																"nativeSrc": "5323:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5323:15:3"
															},
															"nativeSrc": "5323:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5323:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5164:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "5164:180:3"
											},
											{
												"body": {
													"nativeSrc": "5394:147:3",
													"nodeType": "YulBlock",
													"src": "5394:147:3",
													"statements": [
														{
															"nativeSrc": "5404:25:3",
															"nodeType": "YulAssignment",
															"src": "5404:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5427:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5427:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5409:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5409:17:3"
																},
																"nativeSrc": "5409:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5409:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5404:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5404:1:3"
																}
															]
														},
														{
															"nativeSrc": "5438:25:3",
															"nodeType": "YulAssignment",
															"src": "5438:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5461:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5461:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5443:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5443:17:3"
																},
																"nativeSrc": "5443:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5443:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5438:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5438:1:3"
																}
															]
														},
														{
															"nativeSrc": "5472:16:3",
															"nodeType": "YulAssignment",
															"src": "5472:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5483:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5483:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5486:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5486:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5479:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5479:3:3"
																},
																"nativeSrc": "5479:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5479:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5472:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5472:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5512:22:3",
																"nodeType": "YulBlock",
																"src": "5512:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5514:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5514:16:3"
																			},
																			"nativeSrc": "5514:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5514:18:3"
																		},
																		"nativeSrc": "5514:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5514:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5504:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5504:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5507:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5507:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5501:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "5501:2:3"
																},
																"nativeSrc": "5501:10:3",
																"nodeType": "YulFunctionCall",
																"src": "5501:10:3"
															},
															"nativeSrc": "5498:36:3",
															"nodeType": "YulIf",
															"src": "5498:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5350:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5381:1:3",
														"nodeType": "YulTypedName",
														"src": "5381:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5384:1:3",
														"nodeType": "YulTypedName",
														"src": "5384:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5390:3:3",
														"nodeType": "YulTypedName",
														"src": "5390:3:3",
														"type": ""
													}
												],
												"src": "5350:191:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid user\")\n\n    }\n\n    function abi_encode_t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610058575f3560e01c80632e1a7d4d14610063578063410a1d321461008b578063715018a6146100c75780638da5cb5b146100dd578063e69d849d14610107578063f2fde38b146101235761005f565b3661005f57005b5f5ffd5b34801561006e575f5ffd5b506100896004803603810190610084919061057e565b61014b565b005b348015610096575f5ffd5b506100b160048036038101906100ac9190610603565b6101e4565b6040516100be919061063d565b60405180910390f35b3480156100d2575f5ffd5b506100db61022a565b005b3480156100e8575f5ffd5b506100f161023d565b6040516100fe9190610665565b60405180910390f35b610121600480360381019061011c919061067e565b610264565b005b34801561012e575f5ffd5b5061014960048036038101906101449190610603565b61036d565b005b6101536103f1565b61015b610478565b81111561019d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019490610716565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156101e0573d5f5f3e3d5ffd5b5050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6102326103f1565b61023b5f61047f565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c99061077e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610315573d5f5f3e3d5ffd5b508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461036291906107c9565b925050819055505050565b6103756103f1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103e5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103dc9190610665565b60405180910390fd5b6103ee8161047f565b50565b6103f9610540565b73ffffffffffffffffffffffffffffffffffffffff1661041761023d565b73ffffffffffffffffffffffffffffffffffffffff16146104765761043a610540565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161046d9190610665565b60405180910390fd5b565b5f47905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f819050919050565b61055d8161054b565b8114610567575f5ffd5b50565b5f8135905061057881610554565b92915050565b5f6020828403121561059357610592610547565b5b5f6105a08482850161056a565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105d2826105a9565b9050919050565b6105e2816105c8565b81146105ec575f5ffd5b50565b5f813590506105fd816105d9565b92915050565b5f6020828403121561061857610617610547565b5b5f610625848285016105ef565b91505092915050565b6106378161054b565b82525050565b5f6020820190506106505f83018461062e565b92915050565b61065f816105c8565b82525050565b5f6020820190506106785f830184610656565b92915050565b5f5f6040838503121561069457610693610547565b5b5f6106a1858286016105ef565b92505060206106b28582860161056a565b9150509250929050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6107006014836106bc565b915061070b826106cc565b602082019050919050565b5f6020820190508181035f83015261072d816106f4565b9050919050565b7f696e76616c6964207573657200000000000000000000000000000000000000005f82015250565b5f610768600c836106bc565b915061077382610734565b602082019050919050565b5f6020820190508181035f8301526107958161075c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107d38261054b565b91506107de8361054b565b92508282019050808211156107f6576107f561079c565b5b9291505056fea2646970667358221220690540d9bfe0819ee7b9e058fbdba792d48eedbd3a29633b4549ff17838e55b064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xE69D849D EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x123 JUMPI PUSH2 0x5F JUMP JUMPDEST CALLDATASIZE PUSH2 0x5F JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x14B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x22A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xF1 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x478 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x19D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1E0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x232 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x23B PUSH0 PUSH2 0x47F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x315 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x7C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x375 PUSH2 0x3F1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3EE DUP2 PUSH2 0x47F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x540 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x417 PUSH2 0x23D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x476 JUMPI PUSH2 0x43A PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55D DUP2 PUSH2 0x54B JUMP JUMPDEST DUP2 EQ PUSH2 0x567 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x578 DUP2 PUSH2 0x554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x593 JUMPI PUSH2 0x592 PUSH2 0x547 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5A0 DUP5 DUP3 DUP6 ADD PUSH2 0x56A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5D2 DUP3 PUSH2 0x5A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E2 DUP2 PUSH2 0x5C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x5EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5FD DUP2 PUSH2 0x5D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x618 JUMPI PUSH2 0x617 PUSH2 0x547 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x625 DUP5 DUP3 DUP6 ADD PUSH2 0x5EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x637 DUP2 PUSH2 0x54B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x650 PUSH0 DUP4 ADD DUP5 PUSH2 0x62E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x65F DUP2 PUSH2 0x5C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x678 PUSH0 DUP4 ADD DUP5 PUSH2 0x656 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x694 JUMPI PUSH2 0x693 PUSH2 0x547 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6A1 DUP6 DUP3 DUP7 ADD PUSH2 0x5EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6B2 DUP6 DUP3 DUP7 ADD PUSH2 0x56A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x700 PUSH1 0x14 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH2 0x70B DUP3 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x72D DUP2 PUSH2 0x6F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420757365720000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x768 PUSH1 0xC DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH2 0x773 DUP3 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x795 DUP2 PUSH2 0x75C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7D3 DUP3 PUSH2 0x54B JUMP JUMPDEST SWAP2 POP PUSH2 0x7DE DUP4 PUSH2 0x54B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7F6 JUMPI PUSH2 0x7F5 PUSH2 0x79C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x540D9BFE0819EE7B9E0 PC EXTSTATICCALL 0xDB 0xA7 SWAP3 0xD4 DUP15 0xED 0xBD GASPRICE 0x29 PUSH4 0x3B4549FF OR DUP4 DUP15 SSTORE 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "110:895:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;570:216;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;792:106;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;333:231:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;570:216:2;1531:13:0;:11;:13::i;:::-;648:12:2::1;:10;:12::i;:::-;640:6;:20;;631:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;751:10;742:29;;:37;772:6;742:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;570:216:::0;:::o;792:106::-;847:7;873:12;:18;886:4;873:18;;;;;;;;;;;;;;;;866:25;;792:106;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;333:231:2:-;433:1;417:18;;:4;:18;;;409:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;499:4;491:22;;:30;514:6;491:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:6;531:12;:18;544:4;531:18;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;333:231;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;904:97:2:-;947:7;973:21;966:28;;904:97;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:474::-;2639:6;2647;2696:2;2684:9;2675:7;2671:23;2667:32;2664:119;;;2702:79;;:::i;:::-;2664:119;2822:1;2847:53;2892:7;2883:6;2872:9;2868:22;2847:53;:::i;:::-;2837:63;;2793:117;2949:2;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2920:118;2571:474;;;;;:::o;3051:169::-;3135:11;3169:6;3164:3;3157:19;3209:4;3204:3;3200:14;3185:29;;3051:169;;;;:::o;3226:170::-;3366:22;3362:1;3354:6;3350:14;3343:46;3226:170;:::o;3402:366::-;3544:3;3565:67;3629:2;3624:3;3565:67;:::i;:::-;3558:74;;3641:93;3730:3;3641:93;:::i;:::-;3759:2;3754:3;3750:12;3743:19;;3402:366;;;:::o;3774:419::-;3940:4;3978:2;3967:9;3963:18;3955:26;;4027:9;4021:4;4017:20;4013:1;4002:9;3998:17;3991:47;4055:131;4181:4;4055:131;:::i;:::-;4047:139;;3774:419;;;:::o;4199:162::-;4339:14;4335:1;4327:6;4323:14;4316:38;4199:162;:::o;4367:366::-;4509:3;4530:67;4594:2;4589:3;4530:67;:::i;:::-;4523:74;;4606:93;4695:3;4606:93;:::i;:::-;4724:2;4719:3;4715:12;4708:19;;4367:366;;;:::o;4739:419::-;4905:4;4943:2;4932:9;4928:18;4920:26;;4992:9;4986:4;4982:20;4978:1;4967:9;4963:17;4956:47;5020:131;5146:4;5020:131;:::i;:::-;5012:139;;4739:419;;;:::o;5164:180::-;5212:77;5209:1;5202:88;5309:4;5306:1;5299:15;5333:4;5330:1;5323:15;5350:191;5390:3;5409:20;5427:1;5409:20;:::i;:::-;5404:25;;5443:20;5461:1;5443:20;:::i;:::-;5438:25;;5486:1;5483;5479:9;5472:16;;5507:3;5504:1;5501:10;5498:36;;;5514:18;;:::i;:::-;5498:36;5350:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "419600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"donate(address,uint256)": "infinite",
								"getDonation(address)": "2829",
								"owner()": "2558",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"getBalance()": "24"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 110,
									"end": 1005,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 250,
									"end": 291,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 250,
									"end": 291,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 250,
									"end": 291,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 250,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 291,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 250,
									"end": 291,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 291,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 291,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 250,
									"end": 291,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 291,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 250,
									"end": 291,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 272,
									"end": 282,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 110,
									"end": 1005,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220690540d9bfe0819ee7b9e058fbdba792d48eedbd3a29633b4549ff17838e55b064736f6c634300081e0033",
									".code": [
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "2E1A7D4D"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "410A1D32"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "E69D849D"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 1005,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 786,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 786,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 570,
											"end": 786,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 570,
											"end": 786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 570,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 570,
											"end": 786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 570,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 570,
											"end": 786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 792,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 792,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 333,
											"end": 564,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 333,
											"end": 564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 333,
											"end": 564,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 333,
											"end": 564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 333,
											"end": 564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 333,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 333,
											"end": 564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 333,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 333,
											"end": 564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 786,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 570,
											"end": 786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 648,
											"end": 660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 648,
											"end": 658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 648,
											"end": 660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 648,
											"end": 660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 648,
											"end": 660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 640,
											"end": 646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 640,
											"end": 660,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 640,
											"end": 660,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 631,
											"end": 685,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 631,
											"end": 685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 751,
											"end": 761,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 742,
											"end": 771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 742,
											"end": 771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 772,
											"end": 778,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 570,
											"end": 786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 847,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 873,
											"end": 891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 890,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 873,
											"end": 891,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 891,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 873,
											"end": 891,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 891,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 873,
											"end": 891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 891,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 891,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 891,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 873,
											"end": 891,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 866,
											"end": 891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 866,
											"end": 891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 564,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 333,
											"end": 564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 417,
											"end": 435,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 417,
											"end": 421,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 417,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 417,
											"end": 435,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 417,
											"end": 435,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 409,
											"end": 451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 409,
											"end": 451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 409,
											"end": 451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 409,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 409,
											"end": 451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 409,
											"end": 451,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 409,
											"end": 451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 503,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 513,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 491,
											"end": 513,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 514,
											"end": 520,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 491,
											"end": 521,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 521,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 521,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 491,
											"end": 521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 551,
											"end": 557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 531,
											"end": 543,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 531,
											"end": 549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 548,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 531,
											"end": 549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 531,
											"end": 549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 531,
											"end": 549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 531,
											"end": 549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 531,
											"end": 549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 531,
											"end": 549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 531,
											"end": 549,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 531,
											"end": 549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 531,
											"end": 549,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 531,
											"end": 549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 531,
											"end": 549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 531,
											"end": 549,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 531,
											"end": 549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 531,
											"end": 549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 549,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 531,
											"end": 549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 531,
											"end": 557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 531,
											"end": 557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 333,
											"end": 564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 904,
											"end": 1001,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 904,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 947,
											"end": 954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 994,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 966,
											"end": 994,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 966,
											"end": 994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 904,
											"end": 1001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 904,
											"end": 1001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1638,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1646,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1791,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1954,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2135,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2306,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2540,
											"end": 2557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2487,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2693,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2675,
											"end": 2682,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 2699,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2702,
											"end": 2781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2847,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2837,
											"end": 2900,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2837,
											"end": 2900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2793,
											"end": 2910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3020,
											"end": 3027,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2996,
											"end": 3018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2975,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 3038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3167,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3176,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3209,
											"end": 3213,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3204,
											"end": 3207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3396,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3226,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 3362,
											"end": 3363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3360,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3364,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3343,
											"end": 3389,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3768,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3402,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3629,
											"end": 3631,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3624,
											"end": 3627,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3565,
											"end": 3632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3632,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3565,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3632,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3730,
											"end": 3733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3641,
											"end": 3734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 3761,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3754,
											"end": 3757,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3762,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3743,
											"end": 3762,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3743,
											"end": 3762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3768,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3768,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3768,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 4193,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3774,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3980,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 3976,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3963,
											"end": 3981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3955,
											"end": 3981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3955,
											"end": 3981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4021,
											"end": 4025,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4017,
											"end": 4037,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4013,
											"end": 4014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4011,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 4038,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4181,
											"end": 4185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4055,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4186,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4055,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4186,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4186,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 4193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 4193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 4193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 4193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4361,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4199,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "PUSH",
											"source": 3,
											"value": "696E76616C696420757365720000000000000000000000000000000000000000"
										},
										{
											"begin": 4335,
											"end": 4336,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4333,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4337,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4316,
											"end": 4354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4361,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4733,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4367,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4509,
											"end": 4512,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 4589,
											"end": 4592,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4530,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4530,
											"end": 4597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4530,
											"end": 4597,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4530,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4695,
											"end": 4698,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4606,
											"end": 4699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4699,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4606,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4715,
											"end": 4727,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4733,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4739,
											"end": 5158,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4739,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 4909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4945,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4932,
											"end": 4941,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 4946,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4920,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4920,
											"end": 4946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 5001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4990,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 5002,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4980,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4956,
											"end": 5003,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5146,
											"end": 5150,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5020,
											"end": 5151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5151,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5020,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5012,
											"end": 5151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5012,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4739,
											"end": 5158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4739,
											"end": 5158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4739,
											"end": 5158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4739,
											"end": 5158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5164,
											"end": 5344,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5164,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5212,
											"end": 5289,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5209,
											"end": 5210,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5299,
											"end": 5314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5330,
											"end": 5331,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5338,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5350,
											"end": 5541,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5350,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5409,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5427,
											"end": 5428,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5409,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5409,
											"end": 5429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5409,
											"end": 5429,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5409,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5443,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5461,
											"end": 5462,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5443,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5443,
											"end": 5463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5443,
											"end": 5463,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5443,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5463,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5486,
											"end": 5487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5483,
											"end": 5484,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5507,
											"end": 5510,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5504,
											"end": 5505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5501,
											"end": 5511,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5534,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5498,
											"end": 5534,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5514,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5534,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5498,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5350,
											"end": 5541,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5350,
											"end": 5541,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5350,
											"end": 5541,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5350,
											"end": 5541,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5350,
											"end": 5541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Tast2/Begging/Begging.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"donate(address,uint256)": "e69d849d",
							"getDonation(address)": "410a1d32",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getDonation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tast2/Begging/Begging.sol\":\"BeggingContract\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"Tast2/Begging/Begging.sol\":{\"keccak256\":\"0x85add95254c16403e581ad22cb75155f7b870f6dafa22e9cf7d5779439613f57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d53694fc4c35295ec3d5e5da70656a5e8b4a37a086aa0b34db18de681820a9ab\",\"dweb:/ipfs/QmcY9euLnPDvtXxSZE19aPVjEyAoD1CyiHudGJFgqPoRNT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Tast2/Begging/Begging.sol:BeggingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 186,
								"contract": "Tast2/Begging/Begging.sol:BeggingContract",
								"label": "donateAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 188,
								"contract": "Tast2/Begging/Begging.sol:BeggingContract",
								"label": "totalAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"Tast2/Begging/Begging.sol": {
				"ast": {
					"absolutePath": "Tast2/Begging/Begging.sol",
					"exportedSymbols": {
						"BeggingContract": [
							282
						],
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 148,
							"src": "56:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 181,
										"name": "Ownable",
										"nameLocations": [
											"138:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "138:7:2"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "138:7:2"
								}
							],
							"canonicalName": "BeggingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282,
								147,
								177
							],
							"name": "BeggingContract",
							"nameLocation": "119:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "donateAmount",
									"nameLocation": "197:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "153:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 185,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 183,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "161:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "153:34:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "amount",
										"valueNameLocation": "180:6:2",
										"valueType": {
											"id": 184,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "172:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 188,
									"mutability": "mutable",
									"name": "totalAmount",
									"nameLocation": "232:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "216:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "216:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "283:8:2",
										"statements": []
									},
									"id": 196,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 191,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "272:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "276:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "272:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 193,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 190,
												"name": "Ownable",
												"nameLocations": [
													"264:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "264:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "264:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "261:2:2"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "283:0:2"
									},
									"scope": 282,
									"src": "250:41:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "324:3:2",
										"statements": []
									},
									"id": 200,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:2:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:0:2"
									},
									"scope": 282,
									"src": "297:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "399:165:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "417:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "433:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "425:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 209,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "425:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "425:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "417:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c69642075736572",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "436:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6",
																"typeString": "literal_string \"invalid user\""
															},
															"value": "invalid user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddf908e83d5d8e5a7e632d3c04d2a6c5202de116fb69f81774eb55516010d9d6",
																"typeString": "literal_string \"invalid user\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "409:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "409:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "409:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "514:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 219,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "499:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "491:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 217,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "491:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "491:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "505:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "491:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "491:30:2"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 225,
															"name": "donateAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "531:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 227,
														"indexExpression": {
															"id": 226,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "544:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "531:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 228,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "551:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "531:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "531:26:2"
											}
										]
									},
									"functionSelector": "e69d849d",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "342:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "359:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "350:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "373:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "365:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:31:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:0:2"
									},
									"scope": 282,
									"src": "333:231:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "621:165:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 240,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "640:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 241,
																	"name": "getBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "648:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "648:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "640:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "662:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "631:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "631:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "631:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "772:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 249,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "751:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "755:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "751:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "742:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 247,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:9:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "742:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "763:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "742:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "742:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "742:37:2"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 237,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 236,
												"name": "onlyOwner",
												"nameLocations": [
													"611:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "611:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "611:9:2"
										}
									],
									"name": "withdraw",
									"nameLocation": "579:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "596:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "588:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:16:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "621:0:2"
									},
									"scope": 282,
									"src": "570:216:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "856:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 264,
														"name": "donateAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "873:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 266,
													"indexExpression": {
														"id": 265,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "886:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "873:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 267,
												"nodeType": "Return",
												"src": "866:25:2"
											}
										]
									},
									"functionSelector": "410a1d32",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDonation",
									"nameLocation": "801:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "821:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "813:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:14:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "847:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:9:2"
									},
									"scope": 282,
									"src": "792:106:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "956:45:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 276,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "981:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_BeggingContract_$282",
																	"typeString": "contract BeggingContract"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_BeggingContract_$282",
																	"typeString": "contract BeggingContract"
																}
															],
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 274,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "973:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "973:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "987:7:2",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "973:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 273,
												"id": 279,
												"nodeType": "Return",
												"src": "966:28:2"
											}
										]
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "913:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "947:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "946:9:2"
									},
									"scope": 282,
									"src": "904:97:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 283,
							"src": "110:895:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "32:973:2"
				},
				"id": 2
			}
		}
	}
}